generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by the Prisma Client.
// model Post {
//   id       Int       @id @default(autoincrement())
//   title    String
//   content  String
//   authorId Int?
//   insertdt DateTime? @default(now()) @db.DateTime(0)
//   author   User?     @relation(fields: [authorId], references: [id])

//   @@index([authorId], map: "Post_authorId_fkey")
// }

// model User {
//   id       Int     @id @default(autoincrement())
//   email    String  @unique
//   name     String?
//   nickname String?
//   posts    Post[]
// }

//

model User {
  id          Int       @id @default(autoincrement())
  username    String    @unique
  email       String    @unique
  firstName   String    @default(value: "")
  lastName    String
  bio         String
  following   User[]    @relation(name: "FollowRelation")
  followers   User[]    @relation(name: "FollowRelation")
  posts       Post[]
  likes       Like[]
  comments    Comment[]
  rooms       Room[]
  loginSecret String
}

model Post {
  id       Int       @id @default(autoincrement())
  location String
  caption  String
  author   User      @relation(fields: [authorId], references: [id])
  insertdt DateTime? @default(now()) @db.DateTime(0)
  authorId Int
  files    File[]
  likes    Like[]
  comments Comment[]

}

model Like {
  id     Int  @id @default(autoincrement())
  userId Int
  postId Int
  user   User @relation(fields: [userId], references: [id])
  post   Post @relation(fields: [postId], references: [id])
}

model Comment {
  id     Int    @id @default(autoincrement())
  text   String
  user   User   @relation(fields: [userId], references: [id])
  post   Post   @relation(fields: [postId], references: [id])
  userId Int
  postId Int
}

model File {
  id     Int    @id @default(autoincrement())
  url    String
  post   Post   @relation(fields: [postId], references: [id])
  postId Int
}

model Room {
  id           Int       @id @default(autoincrement())
  participants User[]
  messages     Message[]
}

model Message {
  id     Int    @id @default(autoincrement())
  text   String
  fromId Int
  toId   Int
  room   Room   @relation(fields: [roomId], references: [id])
  roomId Int
}
